knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(kableExtra)
library(ppcor)
library(kableExtra)
library(ppcor)
library(corrplot)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df = read.csv("data/train.csv")
head(df) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%")
head(df) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%")
library(dplyr)
head(df) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
head(df) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%")
library(knitr)
library(kableExtra)
library(ppcor)
library(corrplot)
library(dplyr)
head(df) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%")
df[is.na(df)] = "NA"
df[,c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)] = lapply(df[,c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)], factor)
psych::describe(df, omit = T) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%", height = "300px")
ggplot(df, aes(SalePrice)) +
geom_histogram(fill = "cyan3") +
theme_minimal()+
labs(x = "Sale price", y = "Frequency")+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"))
ggplot(df, aes(log(SalePrice))) +
geom_histogram(fill = "cyan3") +
theme_minimal()+
labs(x = "Ln(Sale price($))", y = "Frequency")
ggplot(df,aes(y = MSZoning, fill = MSZoning))+
geom_bar(position = "dodge", stat = "count")+
theme_minimal()+
theme(legend.position = "none")+
labs(x = "Number of real estates", y = "General zoning")
ggplot(df, aes(x = SalePrice, y = Neighborhood, col = Neighborhood))+
geom_boxplot()+
theme_minimal()+
theme(legend.position = "none")+
labs(y = "Neighborhood", x = "Sale price")+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"))
ts = df %>%
mutate(YrMo = paste0(YrSold, "-", MoSold)) %>%
count(YrMo)
ts$YrMo = zoo::as.yearmon(ts$YrMo)
ggplot(ts,aes(x = YrMo, y = n))+
geom_line(color = "cyan3", linewidth = .75)+
geom_point(color = "salmon")+
theme_minimal()
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2("BrBG"), diag = F, type = "lower")
cor_df <- cor(df)
View(df)
cor_df <- cor(select_if(df, is.numeric))
ggcorrplot::ggcorrplot(cor_df)
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2("BrBG"), diag = F, type = "lower")
ggcorrplot::ggcorrplot(cor_df)
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2("BrBG"), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2("red"), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2("RdBu"), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = colorRampPalette(c("blue","white","red"), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = colorRampPalette(c("blue","white","red"), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL1("Reds"), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL1("Blue"), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("PiYG")), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("PRGn")), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("PuOr")), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("RdYIBu")), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("RdYlBu")), diag = F, type = "lower")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("RdYlBu")), diag = F, type = "higher")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("RdYlBu")), diag = F, type = "upper")
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2(diverging = c("RdYlBu")), diag = F, type = "lower")
corrplot(cor_df, method = "color", col = COL2(diverging = c("RdYlBu")), diag = F, type = "lower")
cor_df <- cor(select_if(df, is.numeric))
corrplot(cor_df, method = "color", col = COL2(diverging = c("RdYlBu")), diag = F, type = "lower")
eigen_df <- eigen(cor_df)
eigen_df$values
sum(eigen_df$values)
eigen_df <- eigen(cor_df)
eigen_df$values
sum(eigen_df$values)
eigen_df$vectors[,1:3]
View(eigen_df)
eigen_df <- eigen(cor_df)
eigen_df$values
sum(eigen_df$values)
eigen_df$vectors
library(haven)
library(factoextra)
library(readxl)
library(ggplot2)
library(ggcorrplot)
# numerikus adatok kiválasztása
df_num <- select_if(df, is.numeric)
pca <- princomp(df_num, cor=TRUE)
summary(pca)
eigen_df$values/sum(eigen_df$values)
2.167905e-01 + 1.026754e-01 + 6.889771e-02 + 6.148709e-02 + 4.265785e-02 + 3.756062e-02
0.5300692 + 3.617309e-02 + 3.549001e-02 + 3.429967e-02 + 3.379364e-02 + 3.353643e-02
pca$loadings
pca$loadings[,1:11]
View(df)
View(df_num)
pca <- princomp(df_num[,-30], cor=TRUE)
summary(pca)
eigen_df$values/sum(eigen_df$values)
pca$loadings[,1:11]
2.167905e-01 + 1.026754e-01 + 6.889771e-02 + 6.148709e-02 + 4.265785e-02 + 3.756062e-02 + 3.617309e-02+ 3.549001e-02 + 3.429967e-02 + 3.379364e-02 + 3.353643e-02
pca$loadings[,1:11]
fviz_nbclust(scale(df_num), FUNcluster=kmeans, method="gap_stat")
klaszter <- kmeans(scale(df_num), centers = 11, nstart = 100, iter.max = 100)
df_num$klaszter <- as.factor(klaszter$cluster)
fviz_pca(pca, habillage=df_num$klaszter, addEllipses=TRUE)
df <- cbind(df, pca$scores[,1:11])
lin_reg <- lm(log(SalePrice)~., data=df)
summary(lin_reg)
library(rpart)
library(rpart.plot)
library(randomForest)
library(rpart.plot)
library(randomForest)
library(glmnet)
library(glmnet)
library(fastDummies)
library(earth)
library(caret)
install.packages("caret")
library(caret)
# LASSO
set.seed(1)
x <- as.matrix(dummy_cols(df_num, remove_selected_columns = TRUE, remove_first_dummy = TRUE))
y <- log(df_num$SalePrice)
LASSO <- cv.glmnet(x,y)
plot(LASSO)
LASSO$lambda.1se
coef(LASSO, lambda=LASSO$lambda.1se)
LASSO_b <- glmnet(x,y, lambda = LASSO$lambda.1se)
LASSO_b
MARS <- earth(log(SalePrice)~., data=df, degree=2)
MARS <- earth(log(SalePrice)~., data=df, degree=2)
summary(MARS)
plotmo(linreg)
plotmo(lin_reg)
plotmo(LASSO_b)
plotmo(MARS)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
knitr::opts_chunk$set(echo = TRUE)
library(cli)
library(caret)
library(caret)
kv <- trainControl(method="cv", number=10)
ismkv <- trainControl(method="repeatedcv", number=10, repeats=20)
train(log(SalePrice)~., data=df, method="lm", trControl=ismkv)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(ppcor)
library(corrplot)
library(glmnet)
library(fastDummies)
library(tidymodels)
library(caTools)
library(earth)
library(plotmo)
library(caret)
df = read.csv("data/train.csv")
# test = read.csv("data/test.csv")
head(df) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%")
df[is.na(df)] = "NaN"
df[,c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)] = lapply(df[,c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)], factor)
psych::describe(df, omit = T) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%", height = "300px")
ggplot(df, aes(SalePrice)) +
geom_histogram(fill = "cyan3") +
theme_minimal()+
labs(x = "Sale price", y = "Frequency")+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"))
ggplot(df, aes(log(SalePrice))) +
geom_histogram(fill = "cyan3") +
theme_minimal()+
labs(x = "Ln(Sale price($))", y = "Frequency")
ggplot(df,aes(y = MSZoning, fill = MSZoning))+
geom_bar(position = "dodge", stat = "count")+
theme_minimal()+
theme(legend.position = "none")+
labs(x = "Number of real estates", y = "General zoning")
ggplot(df, aes(x = SalePrice, y = Neighborhood, col = Neighborhood))+
geom_boxplot()+
theme_minimal()+
theme(legend.position = "none")+
labs(y = "Neighborhood", x = "Sale price")+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"))
ts = df %>%
mutate(YrMo = paste0(YrSold, "-", MoSold)) %>%
count(YrMo)
ts$YrMo = zoo::as.yearmon(ts$YrMo)
ggplot(ts,aes(x = YrMo, y = n))+
geom_line(color = "cyan3", linewidth = .75)+
geom_point(color = "salmon")+
theme_minimal()
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2("BrBG"), diag = F, type = "lower")
sample = sample.split(df$SalePrice, SplitRatio = .8)
train = subset(df, sample == T)
test = subset(df, sample == F)
eigen_df <- eigen(cor(select_if(df, is.numeric)))
eigen_df$values
sum(eigen_df$values)
df_num <- select_if(df, is.numeric)
pca <- princomp(df_num[,-30], cor=TRUE)
summary(pca)
eigen_df$values/sum(eigen_df$values)
pca$loadings[,1:11]
X = as.matrix(cbind(dummy_cols(train[,c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)], remove_selected_columns = T, remove_first_dummy = T), train[,-c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:81)]))
y = log(train$SalePrice)
lasso = cv.glmnet(X,y)
coef(lasso, lambda = lasso$lambda.1se)
plot(lasso)
mars = earth(log(SalePrice) ~., train, degree = 2)
summary(mars)
plotmo(mars, ngrid2 = 306)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(ppcor)
library(corrplot)
library(glmnet)
library(fastDummies)
library(tidymodels)
library(caTools)
library(earth)
library(plotmo)
library(caret)
library(factoextra)
df = read.csv("data/train.csv")
# test = read.csv("data/test.csv")
head(df) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%")
df[is.na(is.numeric(df))] = 0
df[is.na(df)] = "Doesn't exist"
df[,c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)] = lapply(df[,c(2:4,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)], factor)
df$MasVnrArea = as.numeric(df$MasVnrArea)
df[is.na(df)] = 0
psych::describe(df, omit = T) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
kable_paper() %>%
scroll_box(width = "100%", height = "300px")
ggplot(df, aes(SalePrice)) +
geom_histogram(fill = "cyan3") +
theme_minimal()+
labs(x = "Sale price", y = "Frequency")+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"))
ggplot(df, aes(log(SalePrice))) +
geom_histogram(fill = "cyan3") +
theme_minimal()+
labs(x = "Ln(Sale price($))", y = "Frequency")
ggplot(df,aes(y = MSZoning, fill = MSZoning))+
geom_bar(position = "dodge", stat = "count")+
theme_minimal()+
theme(legend.position = "none")+
labs(x = "Number of real estates", y = "General zoning")
ggplot(df, aes(x = SalePrice, y = Neighborhood, col = Neighborhood))+
geom_boxplot()+
theme_minimal()+
theme(legend.position = "none")+
labs(y = "Neighborhood", x = "Sale price")+
scale_x_continuous(labels = scales::dollar_format(scale = .001, suffix = "K"))
ts = df %>%
mutate(YrMo = paste0(YrSold, "-", MoSold)) %>%
count(YrMo)
ts$YrMo = zoo::as.yearmon(ts$YrMo)
ggplot(ts,aes(x = YrMo, y = n))+
geom_line(color = "cyan3", linewidth = .75)+
geom_point(color = "salmon")+
theme_minimal()
corrplot(cor(select_if(df, is.numeric)), method = "color", col = COL2("BrBG"), diag = F, type = "lower")
sample = sample.split(df$SalePrice, SplitRatio = .8)
train = subset(df, sample == T)
test = subset(df, sample == F)
set.seed(2023)
n_df = scale((select_if(df[,-81], is.numeric)))
hier = hclust(dist((n_df)), method = "ward.D")
plot(hier)
fviz_nbclust(n_df, FUNcluster = hcut, method = "gap_stat")
fviz_dend(hier, k = 9)
df_hc = as.data.frame(df) %>%
mutate(cl = cutree(hier, k = 9))
ggplot(df_hc, aes(log(LotArea), log(SalePrice), color = factor(cl)))+
geom_point()
wss = sapply(1:15, function(x){kmeans(n_df, x, nstart = 100, iter.max = 100)$tot.withinss})
plot(1:15, wss,
type = "b", pch = 19, frame = F,
xlab = "Number of clusters K",
ylab = "Total within-clusters sum of squares")
fviz_nbclust(n_df, FUNcluster = kmeans, method = "gap_stat")
km = kmeans(n_df, 3, nstart = 100, iter.max = 100)
df_km = as.data.frame(df) %>%
mutate(cl = km$cluster)
ggplot(df_km, aes(log(LotArea), log(SalePrice), color = factor(cl), shape = MSZoning))+
geom_point()
eigen_df <- eigen(cor(select_if(df, is.numeric)))
eigen_df$values
sum(eigen_df$values)
df_num <- select_if(df, is.numeric)
pca <- princomp(df_num[,-30], cor=TRUE)
summary(pca)
eigen_df$values/sum(eigen_df$values)
pca$loadings[,1:11]
pca$loadings[,1:11]
plot(lasso)
X = as.matrix(cbind(dummy_cols(train[,c(2:3,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:80)], remove_selected_columns = T, remove_first_dummy = T), train[,-c(2:3,6:19,22:26,28:34,36,40:43,54,56,58,59,61,64:66,73:75,77:81)]))
y = log(train$SalePrice)
lasso = cv.glmnet(X,y)
coef(lasso, lambda = lasso$lambda.1se)
plot(lasso)
lasso$lambda.1se
log(lasso$lambda.1se)
lasso$lambda.1se
log(lasso$lambda.1se)
coef(lasso, lambda = lasso$lambda.1se)
plot(lasso)
log(lasso$lambda.1se)
lasso$lambda.1se
coef(lasso, lambda = lasso$lambda.1se)
a = coef(lasso, lambda = lasso$lambda.1se)
View(a)
mars = earth(log(SalePrice) ~., train, degree = 2)
summary(mars)
plotmo(mars, ngrid2 = 306)
varImp(lasso, lambda = lasso$lambda.1se)
1.464133e-03
-5.139673e-02
exp(coef(lasso, lambda = lasso$lambda.1se))
```{r}
caret::varImp(lasso, lasso$lambda.1se)
varImp <- function(object, lambda = NULL, ...) {
## skipping a few lines
beta <- predict(object, s = lambda, type = "coef")
if(is.list(beta)) {
out <- do.call("cbind", lapply(beta, function(x) x[,1]))
out <- as.data.frame(out, stringsAsFactors = TRUE)
} else out <- data.frame(Overall = beta[,1])
out <- abs(out[rownames(out) != "(Intercept)",,drop = FALSE])
out
}
varImp(lasso, lasso$lambda.1se)
